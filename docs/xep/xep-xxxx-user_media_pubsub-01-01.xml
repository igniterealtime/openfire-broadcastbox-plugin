<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
  %ents;
  ]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep xmlns="">
<header>
  <title>User Media Streams Publish-Subscribe</title>
  <abstract>This specification defines a payload format for communicating user media streams using WebRTC-based ingestion/egress. The WebRTC SDP payload format is typically transported using the personal eventing protocol, a profile of XMPP publish-subscribe specified in XEP-0163.</abstract>
  <legal>
    <copyright>This XMPP Extension Protocol is copyright © 1999 – 2023 by the <link url="https://xmpp.org/">XMPP Standards Foundation</link> (XSF).</copyright>
    <permissions>Permission is hereby granted, free of charge, to any person obtaining a copy of this specification (the "Specification"), to make use of the Specification without restriction, including without limitation the rights to implement the Specification in a software program, deploy the Specification in a network service, and copy, modify, merge, publish, translate, distribute, sublicense, or sell copies of the Specification, and to permit persons to whom the Specification is furnished to do so, subject to the condition that the foregoing copyright notice and this permission notice shall be included in all copies or substantial portions of the Specification. Unless separate permission is granted, modified works that are redistributed shall not contain misleading information regarding the authors, title, number, or publisher of the Specification, and shall not claim endorsement of the modified works by the authors, any organization or project to which the authors belong, or the XMPP Standards Foundation.</permissions>
    <warranty>## NOTE WELL: This Specification is provided on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. ##</warranty>
    <liability>In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall the XMPP Standards Foundation or any author of this Specification be liable for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising from, out of, or in connection with the Specification or the implementation, deployment, or other use of the Specification (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if the XMPP Standards Foundation or such author has been advised of the possibility of such damages.</liability>
    <conformance>This XMPP Extension Protocol has been contributed in full conformance with the XSF's Intellectual Property Rights Policy (a copy of which can be found at &lt;<link url="https://xmpp.org/about/xsf/ipr-policy">https://xmpp.org/about/xsf/ipr-policy</link>&gt; or obtained by writing to XMPP Standards Foundation, P.O. Box 787, Parker, CO 80134 USA).</conformance>
  </legal>
  <number>XXXX</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies/>
  <supersedes/>
  <supersededby/>
  <shortname>xxxx-user_media_pubsub</shortname>
  <author>
    <firstname>Dele</firstname>
    <surname>Olajide</surname>
    <email>dele@olajide.net</email>
    <jid>dele.olajide@igniterealtime.org</jid>
  </author>
  <revision>  
    <version>0.0.1</version>
    <date>2023-12-31</date>
    <initials>do</initials>
    <remark>
      <ul>
        <li>Initial version.</li>
      </ul>
    </remark>
  </revision>
</header>
<section1 topic='Introduction' anchor='intro'> 
  <p>While WebRTC specifies the usage of SDPs [RFC8866] and an Offer/Answer model [RFC3264] for creating connections, WebRTC does not define the precise signaling protocols over which SDPs should be exchanged [RFC8825]. In order to establish a WebRTC session between two WebRTC entities, a signaling protocol is usually used to exchange SDPs</p>
  <p>With HTTP/S applications, WHIP and WHEP have been proposed as simple protocols to ingress and egress media streams using WebRTC.</p>
  <p>This specification defines a payload format for communicating user media streams using WebRTC-based ingestion/egress. The WebRTC SDP payload format is typically transported using the personal eventing protocol, a profile of XMPP publish-subscribe specified in XEP-0163 which maps directly to WHIP and WHEP.</p>

  <section2 topic='User publishes media stream' anchor='publish-media-stream'>   
    <p>A sample protocol flow to ingress a media session from the client</p> 
    <example caption='Client creates an SDP offer to send a media stream and publishes it'><![CDATA[  
<iq from='juliet@capulet.lit/broadcast' id='ih28sx61' type='set'>
	<pubsub xmlns='http://jabber.org/protocol/pubsub'>
		<publish node='urn:xmpp:sdp:1'>
			<item>
				<sdp xmlns='urn:xmpp:sdp:1'>
					SDP OFFER
				</sdp>
			</item>
		</publish>
	</pubsub>
</iq>	
    ]]></example> 
    <example caption='The server responds with an SDP answer for the client'><![CDATA[  
<iq to='juliet@capulet.lit/broadcast' id='ih28sx61' from='shakespeare.lit' type='result'>
  <sdp xmlns='urn:xmpp:sdp:1'>
    SDP ANSWER
  </sdp> 
</iq>	
    ]]></example> 
    <example caption='The server sends a user media stream notification to all subscribers with no payload'><![CDATA[  
<message to='any-user@capulet.lit/globe' from='juliet@capulet.lit/broadcast'>
	<event xmlns='http://jabber.org/protocol/pubsub#event'>
		<items node='urn:xmpp:sdp:1'>
			<item id="ih28sx61" />
		</items>
	</event>
</message>	
    ]]></example> 	
  </section2>
  
  <section2 topic='Subscriber request for user media stream' anchor='subscribe-media-stream'>   
    <p>A sample protocol flow to egress a user media by the client</p> 
    <example caption='Client creates an SDP offer to receive a notified user media stream'><![CDATA[ 
<iq to='any-user@shakespeare.lit/globe' id='6338Vbrhrl' from='shakespeare.lit' type='get'>
	<pubsub xmlns='http://jabber.org/protocol/pubsub'>
		<items node='urn:xmpp:sdp:1'>
			<item id="ih28sx61">
				<sdp xmlns='urn:xmpp:sdp:1'>
					SDP OFFER
				</sdp>			
			</item>
		</items>
	</pubsub>
</iq>	
    ]]></example> 
    <example caption='The server responds with an SDP answer for the client'><![CDATA[  
<iq to='any-user@shakespeare.lit/globe' id='6338Vbrhrl' from='shakespeare.lit' type='result'>
  <sdp xmlns='urn:xmpp:sdp:1'>
    SDP ANSWER
  </sdp>  
</iq>	
    ]]></example> 	
  </section2>	
</section1> 
<section1 topic="Implementation Notes" anchor="impl">
  <p></p>
</section1>
<section1 topic="Security Considerations" anchor="security">
  <section2 topic="General" anchor="general">
   <ul>
   </ul>
  </section2>
</section1>
<section1 topic="IANA Considerations" anchor="iana">
  <p>This document requires no interaction with the &IANA;</p>
</section1>
<section1 topic="XMPP Registrar Considerations" anchor="registrar">
  <section2 topic="Protocol Namespaces" anchor="registrar-ns">
    <p>This specification defines the following XML namespaces:</p>
    <ul>
      <li>urn:xmpp:sdp:1</li>
    </ul>
    <p>Upon advancement of this specification from a status of Experimental to a status of Draft, the &REGISTRAR; shall add the foregoing namespace to the registry located at &NAMESPACES;, as described in Section 4 of &xep0053;.</p>
  </section2>
  <section2 topic="Meeting Serviced Type Registry" anchor="registrar-type">
    <p>The XMPP Registrar maintains a registry of Meeting provider types at TBD.</p>
  </section2>
</section1>
<section1 topic="XML Schema" anchor="schema">
  <code><![CDATA[
<xml version="1.0" encoding="utf8">
<!-- TBD -->
]]></code>
</section1>
</xep>
